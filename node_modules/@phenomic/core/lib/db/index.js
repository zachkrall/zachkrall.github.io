"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = require("babel-runtime/helpers/typeof");

var _typeof3 = _interopRequireDefault(_typeof2);

var _objectWithoutProperties2 = require("babel-runtime/helpers/objectWithoutProperties");

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require("babel-runtime/core-js/object/get-prototype-of");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require("babel-runtime/helpers/inherits");

var _inherits3 = _interopRequireDefault(_inherits2);

var _keys = require("babel-runtime/core-js/object/keys");

var _keys2 = _interopRequireDefault(_keys);

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require("babel-runtime/core-js/promise");

var _promise2 = _interopRequireDefault(_promise);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _defineProperty2 = require("babel-runtime/helpers/defineProperty");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _toConsumableArray2 = require("babel-runtime/helpers/toConsumableArray");

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _extends4 = require("babel-runtime/helpers/extends");

var _extends5 = _interopRequireDefault(_extends4);

var getDataRelation = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(fieldName, ids) {
    var partial;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            partial = null;
            _context.prev = 1;

            if (!Array.isArray(ids)) {
              _context.next = 8;
              break;
            }

            _context.next = 5;
            return _promise2.default.all(ids.map(function (id) {
              return db.getPartial(fieldName, id);
            }));

          case 5:
            partial = _context.sent;
            _context.next = 11;
            break;

          case 8:
            _context.next = 10;
            return db.getPartial(fieldName, ids);

          case 10:
            partial = _context.sent;

          case 11:
            return _context.abrupt("return", partial);

          case 14:
            _context.prev = 14;
            _context.t0 = _context["catch"](1);
            return _context.abrupt("return", ids);

          case 17:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this, [[1, 14]]);
  }));

  return function getDataRelation(_x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

var getDataRelations = function () {
  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(fields) {
    var ids, resolvedValues;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            ids = (0, _keys2.default)(fields);
            _context2.next = 3;
            return _promise2.default.all(ids.map(function (id) {
              return getDataRelation(id, fields[id]);
            }));

          case 3:
            resolvedValues = _context2.sent;
            return _context2.abrupt("return", ids.reduce(function (resolvedFields, id, index) {
              resolvedFields[id] = resolvedValues[index];
              return resolvedFields;
            }, {}));

          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function getDataRelations(_x4) {
    return _ref2.apply(this, arguments);
  };
}();

var _deepAssign = require("deep-assign");

var _deepAssign2 = _interopRequireDefault(_deepAssign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var glue = "$$";
var nullSub = "__null__";
var emptyDatabase = {};
var database = emptyDatabase;

function sortBy() {
  var sort = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "date";

  return function (a, b) {
    a = a.data[sort];
    b = b.data[sort];
    if (!a && !b) return 0;
    if (!a) return -1;
    if (!b) return 1;
    if (b > a) return -1;
    if (a > b) return 1;
    return 0;
  };
}

function getSublevel(sub, filter, filterValue) {
  if (!Array.isArray(sub)) {
    sub = [sub === null ? nullSub : sub];
  }
  var db = database[sub.join(glue)] || [];
  if (filter && filterValue && filter !== "default") {
    db = db.filter(function (item) {
      if (Array.isArray(item.data[filter])) {
        return item.data[filter].indexOf(filterValue) > -1;
      }
      return item.data[filter] === filterValue;
    });
  }
  return db;
}

function putToSublevel(subName, value) {
  if (!Array.isArray(subName)) {
    subName = [subName === null ? nullSub : subName];
  }
  var subname = subName.join(glue);
  var sub = database[subname] || [];
  database = (0, _extends5.default)({}, database, (0, _defineProperty3.default)({}, subname, [].concat((0, _toConsumableArray3.default)(sub.filter(function (item) {
    return item.id !== value.id;
  })), [value]).sort(function (a, b) {
    return b.id > a.id ? -1 : 1;
  })));
}

function updateToSublevel(subName, value) {
  if (!Array.isArray(subName)) {
    subName = [subName === null ? nullSub : subName];
  }
  var subname = subName.join(glue);
  var sub = database[subname] || [];
  database = (0, _extends5.default)({}, database, (0, _defineProperty3.default)({}, subname, [].concat((0, _toConsumableArray3.default)(sub.filter(function (item) {
    return item.id !== value.id;
  })), [(0, _deepAssign2.default)({}, sub.find(function (item) {
    return item.id === value.id;
  }) || {}, value)]).sort(function (a, b) {
    return b.id > a.id ? -1 : 1;
  })));
}

var NotFoundError = function (_Error) {
  (0, _inherits3.default)(NotFoundError, _Error);

  function NotFoundError() {
    var _ref3;

    (0, _classCallCheck3.default)(this, NotFoundError);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref3 = NotFoundError.__proto__ || (0, _getPrototypeOf2.default)(NotFoundError)).call.apply(_ref3, [this].concat(args)));

    _this.name = "NotFoundError";
    return _this;
  }

  return NotFoundError;
}(Error);

var db = {
  _getDatabase: function _getDatabase() {
    return database;
  },
  _setDatabase: function _setDatabase(newDb) {
    database = newDb;
  },
  destroy: function destroy() {
    return new _promise2.default(function (resolve) {
      database = emptyDatabase;
      resolve();
    });
  },
  put: function put(sub, id) {
    var _this2 = this;

    var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { data: {}, partial: {} };
    return (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
      return _regenerator2.default.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return putToSublevel(sub, {
                data: value.data,
                partial: value.partial,
                id: id
              });

            case 2:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3, _this2);
    }))();
  },
  update: function update(sub, id) {
    var _this3 = this;

    var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { data: {}, partial: {} };
    return (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4() {
      return _regenerator2.default.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return updateToSublevel(sub, {
                data: value.data,
                partial: value.partial,
                id: id
              });

            case 2:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4, _this3);
    }))();
  },
  get: function get(sub, id) {
    var _this4 = this;

    return (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5() {
      var item, _item$data, body, metadata, relatedData;

      return _regenerator2.default.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              item = getSublevel(sub).find(function (item) {
                return item.id === id;
              });

              if (!(typeof item === "undefined")) {
                _context5.next = 3;
                break;
              }

              throw new NotFoundError("ID not found in database");

            case 3:
              _item$data = item.data, body = _item$data.body, metadata = (0, _objectWithoutProperties3.default)(_item$data, ["body"]);
              _context5.next = 6;
              return getDataRelations(metadata);

            case 6:
              relatedData = _context5.sent;
              return _context5.abrupt("return", {
                id: id,
                value: (0, _extends5.default)({}, relatedData, body ? { body: body } : {})
              });

            case 8:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5, _this4);
    }))();
  },
  getPartial: function getPartial(sub, id) {
    var _this5 = this;

    return (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee6() {
      var item, type;
      return _regenerator2.default.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              item = getSublevel(sub).find(function (item) {
                return item.id === id;
              });

              if (item) {
                _context6.next = 3;
                break;
              }

              return _context6.abrupt("return", id);

            case 3:
              type = (0, _typeof3.default)(item.partial);

              if (!(type === "string" || type === "number" || type === "boolean")) {
                _context6.next = 6;
                break;
              }

              return _context6.abrupt("return", item.partial);

            case 6:
              return _context6.abrupt("return", (0, _extends5.default)({ id: id }, item.partial));

            case 7:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6, _this5);
    }))();
  },
  getList: function getList(sub) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var filter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "default";
    var filterValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";

    return new _promise2.default(function (resolve) {
      var collection = getSublevel(sub, filter, filterValue);
      collection.sort(sortBy());
      if (config.reverse) {
        collection = collection.concat().reverse();
      }
      if (config.gte) {
        var index = collection.findIndex(function (item) {
          return item.id === config.gte;
        });
        collection = index > -1 ? collection.slice(index) : collection;
      } else if (config.gt) {
        var _index = collection.findIndex(function (item) {
          return item.id === config.gt;
        });
        collection = _index > -1 ? collection.slice(_index + 1) : collection;
      } else if (config.lte) {
        var _index2 = collection.findIndex(function (item) {
          return item.id === config.lte;
        });
        collection = _index2 > -1 ? collection.slice(0, _index2 + 1) : collection;
      } else if (config.lt) {
        var _index3 = collection.findIndex(function (item) {
          return item.id === config.lt;
        });
        collection = _index3 > -1 ? collection.slice(0, _index3) : collection;
      }
      if (typeof config.limit === "number") {
        collection = collection.slice(0, Math.min(config.limit, collection.length));
      }

      _promise2.default.all(collection.map(function (item) {
        return db.getPartial(sub, item.id).then(function (value) {
          var type = typeof value === "undefined" ? "undefined" : (0, _typeof3.default)(value);
          if (type === "string" || type === "number" || type === "boolean" || Array.isArray(value)) {
            return {
              id: item.id,
              value: value
            };
          }
          return (0, _extends5.default)({}, value, {
            id: item.id
          });
        });
      })).then(resolve);
    });
  }
};

exports.default = db;