"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _objectWithoutProperties2 = require("babel-runtime/helpers/objectWithoutProperties");

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = require("babel-runtime/helpers/extends");

var _extends3 = _interopRequireDefault(_extends2);

var _react = require("react");

var React = _interopRequireWildcard(_react);

var _Link = require("./Link.js");

var _Link2 = _interopRequireDefault(_Link);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable react/no-multi-comp */
// because it considers render() as a react compo
/* eslint-disable react/no-unused-prop-types */
// because it's a bit dumb

var defaultProps = { DefaultComponent: "div" };

var defaultOptions = {
  components: {
    a: _Link2.default
  }
};

var render = function render(item, options, key) {
  if (!item) {
    return null;
  }
  if (typeof item === "string") {
    return item;
  }
  var _item$p = item.p,
      props = _item$p === undefined ? {} : _item$p,
      children = item.c;

  var Tag = options.components && item.t && options.components[item.t] || item.t || options.DefaultComponent || defaultProps.DefaultComponent;

  return React.createElement(
    Tag,
    (0, _extends3.default)({}, props, { key: key }),
    Array.isArray(children) ? children.map(function (child, key) {
      return render(child, options, key);
    }) : render(children, options)
  );
};

var BodyRenderer = function BodyRenderer(_ref) {
  var children = _ref.children,
      props = (0, _objectWithoutProperties3.default)(_ref, ["children"]);

  if (typeof children === "undefined") {
    console.error("@phenomic/plugin-renderer-react: BodyRenderer expects at least a child");
    return null;
  }
  if (typeof children === "string") {
    return React.createElement("div", { dangerouslySetInnerHTML: { __html: children } });
  }
  var r = render(children, (0, _extends3.default)({}, defaultOptions, props || defaultProps, {
    // force to mix components, as default one (Link) is crucial
    components: (0, _extends3.default)({}, defaultOptions.components, props.components || {})
  }));
  var _props$DefaultCompone = props.DefaultComponent,
      DefaultComponent = _props$DefaultCompone === undefined ? defaultProps.DefaultComponent : _props$DefaultCompone;

  return typeof r === "string" ? React.createElement(
    DefaultComponent,
    null,
    r
  ) : r;
};

exports.default = BodyRenderer;