"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _stringify = require("babel-runtime/core-js/json/stringify");

var _stringify2 = _interopRequireDefault(_stringify);

var _extends2 = require("babel-runtime/helpers/extends");

var _extends3 = _interopRequireDefault(_extends2);

var _toConsumableArray2 = require("babel-runtime/helpers/toConsumableArray");

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _keys = require("babel-runtime/core-js/object/keys");

var _keys2 = _interopRequireDefault(_keys);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _promise = require("babel-runtime/core-js/promise");

var _promise2 = _interopRequireDefault(_promise);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _chalk = require("chalk");

var _chalk2 = _interopRequireDefault(_chalk);

var _react = require("react");

var React = _interopRequireWildcard(_react);

var _server = require("react-dom/server");

var _server2 = _interopRequireDefault(_server);

var _reactRouter = require("react-router");

var _RouteUtils = require("react-router/lib/RouteUtils");

var _url = require("@phenomic/api-client/lib/url");

var _url2 = _interopRequireDefault(_url);

var _Provider = require("../components/Provider");

var _Provider2 = _interopRequireDefault(_Provider);

var _store = require("../shared/store");

var _store2 = _interopRequireDefault(_store);

var _performQuery = require("../shared/performQuery");

var _performQuery2 = _interopRequireDefault(_performQuery);

var _QueryString = require("../shared/QueryString");

var _renderHTML = require("../renderHTML");

var _renderHTML2 = _interopRequireDefault(_renderHTML);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = require("debug")("phenomic:plugin:react");

function getMatch(_ref) {
  var routes = _ref.routes,
      location = _ref.location;

  return new _promise2.default(function (resolve, reject) {
    (0, _reactRouter.match)({ routes: routes, location: "/" + location }, function (error, redirectLocation, renderProps) {
      error ? reject(error) : resolve({ renderProps: renderProps, redirectLocation: redirectLocation });
    });
  });
}

function staticRenderToString(config, store, _ref2, renderHTML, assets) {
  var renderProps = _ref2.renderProps;

  return renderHTML({
    config: config,
    props: {
      WrappedApp: function WrappedApp() {
        return React.createElement(
          _Provider2.default,
          { fetch: fetch, store: store },
          React.createElement(_reactRouter.RouterContext, renderProps)
        );
      },
      renderAsObject: function renderAsObject(UserWrappedApp) {
        return {
          main: _server2.default.renderToString(UserWrappedApp),
          state: store.getState(),
          assets: assets
        };
      }
    }
  });
}

var renderStatic = function () {
  var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(_ref4) {
    var config = _ref4.config,
        app = _ref4.app,
        assets = _ref4.assets,
        phenomicFetch = _ref4.phenomicFetch,
        location = _ref4.location;

    var routes, store, _ref5, renderProps, redirectLocation, containers, contents, state, filepath;

    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            debug("server renderering");

            routes = (0, _RouteUtils.createRouteFromReactElement)(app.routes);
            store = (0, _store2.default)();
            _context.next = 5;
            return getMatch({
              routes: routes,
              location: location
            });

          case 5:
            _ref5 = _context.sent;
            renderProps = _ref5.renderProps;
            redirectLocation = _ref5.redirectLocation;
            containers = renderProps.components.filter(function (item) {
              return item && typeof item.getQueries === "function";
            });
            _context.next = 11;
            return _promise2.default.all(containers.map(function (item) {
              var queries = item.getQueries(renderProps);
              return (0, _performQuery2.default)(store, phenomicFetch, (0, _keys2.default)(queries).map(function (key) {
                return (0, _QueryString.encode)(queries[key]);
              }));
            }));

          case 11:
            contents = void 0;
            _context.prev = 12;
            _context.next = 15;
            return staticRenderToString(config, store, { renderProps: renderProps, redirectLocation: redirectLocation }, _renderHTML2.default, assets);

          case 15:
            contents = _context.sent;
            _context.next = 24;
            break;

          case 18:
            _context.prev = 18;
            _context.t0 = _context["catch"](12);

            console.error();
            console.error(_chalk2.default.red("An error occured when Phenomic tried to render") + " " + _chalk2.default.yellow(location));
            console.error();
            throw _context.t0;

          case 24:
            state = store.getState();
            // don't prepend index.html if location already have .html

            filepath = location.match(/\.html$/) ? location : _path2.default.join(location, "index.html");
            return _context.abrupt("return", [{ path: filepath, contents: contents }].concat((0, _toConsumableArray3.default)((0, _keys2.default)(state).map(function (key) {
              return {
                path: (0, _url2.default)((0, _extends3.default)({ root: "phenomic" }, (0, _QueryString.decode)(key))),
                contents: (0, _stringify2.default)(state[key].node)
              };
            }))));

          case 27:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, undefined, [[12, 18]]);
  }));

  return function renderStatic(_x) {
    return _ref3.apply(this, arguments);
  };
}();

exports.default = renderStatic;