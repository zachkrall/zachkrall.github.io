// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Link        = require("./link.js");
var List        = require("bs-platform/lib/js/list.js");
var $$Array     = require("bs-platform/lib/js/array.js");
var Block       = require("bs-platform/lib/js/block.js");
var React       = require("react");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");

var component = ReasonReact.statelessComponent("BodyRenderer");

function jsTreeToReason(jsChild) {
  var match = ( Object.prototype.toString.call(jsChild) );
  switch (match) {
    case "[object Object]" : 
        var tag = String(jsChild.t);
        var props = jsChild.p;
        var match$1 = jsChild.c;
        var children = (match$1 == null) ? /* [] */0 : List.map(jsTreeToReason, $$Array.to_list(match$1));
        return /* Element */Block.__(1, [
                  tag,
                  props,
                  children
                ]);
    case "[object String]" : 
        return /* String */Block.__(0, [String(jsChild)]);
    default:
      return /* Empty */0;
  }
}

function make(body, _) {
  var renderChild = function (child) {
    if (typeof child === "number") {
      return null;
    } else if (child.tag) {
      var reasonChildren = child[2];
      var tag = child[0];
      if (tag === "a") {
        return ReasonReact.element(/* None */0, /* None */0, Link.make(/* Some */[( child[1].href )], /* Some */[( child[1].style )], /* Some */[( child[1].activeStyle )], /* Some */[( child[1].className )], /* Some */[( child[1].activeClassName )], /* array */[$$Array.of_list(List.map(renderChild, reasonChildren))]));
      } else {
        return React.createElement(tag, child[1], $$Array.of_list(List.map(renderChild, reasonChildren)));
      }
    } else {
      return child[0];
    }
  };
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      var tree = jsTreeToReason(body);
      return React.createElement("div", undefined, renderChild(tree));
    });
  return newrecord;
}

exports.component      = component;
exports.jsTreeToReason = jsTreeToReason;
exports.make           = make;
/* component Not a pure module */
