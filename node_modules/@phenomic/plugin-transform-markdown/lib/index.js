"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require("babel-runtime/helpers/extends");

var _extends3 = _interopRequireDefault(_extends2);

exports.default = function () {
  return {
    name: "@phenomic/plugin-transform-markdown",
    supportedFileTypes: ["md", "markdown"],
    transform: transformMarkdownFile
  };
};

var _lodash = require("lodash.deburr");

var _lodash2 = _interopRequireDefault(_lodash);

var _lodash3 = require("lodash.kebabcase");

var _lodash4 = _interopRequireDefault(_lodash3);

var _grayMatter = require("gray-matter");

var _grayMatter2 = _interopRequireDefault(_grayMatter);

var _transformer = require("./transformer.js");

var _transformer2 = _interopRequireDefault(_transformer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = require("debug")("phenomic:plugin:transform-markdown");

function transformMarkdownFile(_ref) {
  var config = _ref.config,
      file = _ref.file,
      contents = _ref.contents;

  debug("transforming " + file.fullpath);

  var front = (0, _grayMatter2.default)(contents.toString());
  var partial = (0, _extends3.default)({}, front.data, Array.isArray(front.data.tags) ? {
    tags: front.data.tags.map(function (tag) {
      return (0, _lodash4.default)((0, _lodash2.default)(tag));
    })
  } : {});
  return {
    data: (0, _extends3.default)({}, partial, {
      body: (0, _transformer2.default)(config, front.content).contents
    }),
    partial: partial
  };
}